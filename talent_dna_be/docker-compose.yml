# version: '3.8'

# services:
#   talent_dna_be:
#     build:
#       context: .
#       dockerfile: Dockerfile
#     image: talent_dna_be
#     container_name: talent_dna_be
#     command: python manage.py runserver 0.0.0.0:8000
#     ports:
#       - "8000:8000"
#     env_file:
#       - .env

#   talent_dna_db:
#     image: postgres:13
#     container_name: talent_dna_db
#     environment:
#       POSTGRES_USER: ${POSTGRES_USER}
#       POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
#       POSTGRES_DB: ${POSTGRES_DB}
#     ports:
#       - "5432:5432"
#     volumes:
#       - talent_dna_db_data:/var/lib/postgresql/data

# volumes:
#   talent_dna_db_data:

# version: '3.8'

# services:
#   db:
#     image: postgres:13
#     volumes:
#       - postgres_data:/var/lib/postgresql/data
#     environment:
#       POSTGRES_DB: mydatabase
#       POSTGRES_USER: myuser
#       POSTGRES_PASSWORD: mypassword

#   web:
#     build: .
#     command: python manage.py runserver 0.0.0.0:8000
#     volumes:
#       - .:/code
#     ports:
#       - "8000:8000"
#     depends_on:
#       - db
#     environment:
#       - DJANGO_SETTINGS_MODULE=talent_dna_be.settings
#       - POSTGRES_DB=mydatabase
#       - POSTGRES_USER=myuser
#       - POSTGRES_PASSWORD=mypassword
#       - DATABASE_URL=postgres://myuser:mypassword@db:5432/mydatabase

# volumes:
#   postgres_data:

version: '3.8'

services:
  db:
    image: postgres:14-alpine
    container_name: db
    restart: no
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: secret99
    ports:
      - "15001:5432"
    volumes:
      - db:/var/lib/postgresql/data
    networks:
      - django-network

  web:
    build: .
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/code
    ports:
      - "8000:8000"
    depends_on:
      - db
    links:
      - db:db
    env_file:
      - .env
    networks:
      - django-network

networks:
  django-network:
    driver: bridge

volumes:
  db:
    driver: local

